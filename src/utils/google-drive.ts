import { supabase } from '@/integrations/supabase/client';
import { showError, showSuccess } from './toast';

// Helper function to convert canvas to Base64 image data
const getQrCodeBase64 = (qrRef: React.RefObject<{ download: (options: { name: string; extension: string }) => void }>, fileName: string): string | null => {
  // Since qr-code-styling doesn't expose the canvas directly, we rely on the DOM structure
  // to find the canvas element generated by the library.
  const container = document.querySelector('.flex.justify-center.items-center > div > canvas');
  if (container instanceof HTMLCanvasElement) {
    // Get data URL and strip the header (e.g., 'data:image/png;base64,')
    const dataUrl = container.toDataURL('image/png');
    return dataUrl.split(',')[1];
  }
  showError('Could not find QR code canvas for upload.');
  return null;
};

export const saveQrCodeToGoogleDrive = async (
  qrRef: React.RefObject<{ download: (options: { name: string; extension: string }) => void }>,
  qrName: string,
) => {
  const base64Image = getQrCodeBase64(qrRef, qrName);
  if (!base64Image) return;

  const fileName = `${qrName || 'unnamed'}-${new Date().toISOString()}.png`;
  
  try {
    const { data, error } = await supabase.functions.invoke('save-to-drive', {
      body: {
        base64Image,
        fileName,
      },
    });

    if (error) throw error;
    
    showSuccess(`QR code saved automatically to Google Drive!`);
    return data;

  } catch (error) {
    console.error('Google Drive Save Error:', error);
    showError('Failed to save QR code to Google Drive. Check your account link.');
  }
};